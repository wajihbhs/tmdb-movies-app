name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:

jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js 22.14
        uses: actions/setup-node@v4
        with:
          node-version: 22.14
          cache: yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

  lint:
    name: Run ESLint
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.14
          cache: yarn

      - run: yarn install --frozen-lockfile
      - run: yarn lint

  test-unit:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.14
          cache: yarn

      - run: yarn install --frozen-lockfile
      - run: yarn test:unit

  test-e2e:
    name: Run E2E Tests
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.14
          cache: yarn

      - run: yarn install --frozen-lockfile
      - run: npx playwright install --with-deps
      - run: yarn test:e2e

  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: [lint, test-unit, test-e2e]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22.14
          cache: yarn

      - run: yarn install --frozen-lockfile
      - run: yarn build

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: "--prod"
